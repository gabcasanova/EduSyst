/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package sisescola_java.paginasis.Horarios;

import java.awt.Color;
import java.sql.*;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import sisescola_java.Objetos1.*;

/**
 *
 * @author Matheus
 */
public class TelaDesescalarMateria extends javax.swing.JFrame {

    private void carregarHorariosMateriasTurmas() throws ClassNotFoundException {
        DefaultTableModel modeloTabela = (DefaultTableModel) tblMateriaEscalada.getModel();
        modeloTabela.setRowCount(0);  // Limpa a tabela antes de carregar os novos resultados

        // SQL para consultar os dados da tabela Horarios_Materias
        String sql = "SELECT hm.Horario_ID, m.Nome AS Materia, t.Classe AS Turma, h.Inicio AS Horario, hm.Turma_ID, hm.Materia_ID "
                + "FROM Horarios_Materias hm "
                + "INNER JOIN Materias m ON hm.Materia_ID = m.Id_Materia "
                + "INNER JOIN Turmas t ON hm.Turma_ID = t.Id_Turma "
                + "INNER JOIN Horarios h ON hm.Horario_ID = h.Id_Horario";

        try (Connection con = ConnectionFactory.getConnection(); PreparedStatement ps = con.prepareStatement(sql)) {

            ResultSet rs = ps.executeQuery();  // Executa a consulta SQL

            // Itera sobre o ResultSet e adiciona os resultados na tabela
            while (rs.next()) {
                modeloTabela.addRow(new Object[]{
                    rs.getInt("Materia_ID"), // ID da matéria
                    rs.getString("Materia"), // Nome da matéria
                    rs.getString("Turma"), // Nome da turma (a coluna Classe da tabela Turmas)
                    rs.getString("Horario"), // Horário de início
                    rs.getInt("Turma_ID"), // ID da turma
                    rs.getInt("Horario_ID") // ID do horário
                });
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Erro ao carregar horários, matérias e turmas: " + ex.getMessage());
        }
    }

    /**
     * Creates new form TelaDesescalar
     */
    public TelaDesescalarMateria() {
        initComponents();
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlPrincipalC = new javax.swing.JPanel();
        btnVoltarCadA = new javax.swing.JButton();
        lblIDTurma = new javax.swing.JLabel();
        btDesescalar = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblMateriaEscalada = new javax.swing.JTable();
        txtBuscarMateria = new javax.swing.JTextField();
        lblNomeE1 = new javax.swing.JLabel();
        btPesquisaMateria = new javax.swing.JButton();
        pnlBottomC = new javax.swing.JPanel();
        lblBottomC = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        pnlTopoC = new javax.swing.JPanel();
        lblTopoC = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Desescalar Matéria");

        pnlPrincipalC.setBackground(new java.awt.Color(142, 202, 230));

        btnVoltarCadA.setBackground(new java.awt.Color(142, 202, 230));
        btnVoltarCadA.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/Imagensbotãopequeno/voltar.png"))); // NOI18N
        btnVoltarCadA.setToolTipText("Voltar");
        btnVoltarCadA.setBorder(null);
        btnVoltarCadA.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnVoltarCadAMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnVoltarCadAMouseExited(evt);
            }
        });
        btnVoltarCadA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarCadAActionPerformed(evt);
            }
        });

        lblIDTurma.setFont(new java.awt.Font("Segoe UI", 1, 2)); // NOI18N
        lblIDTurma.setForeground(new java.awt.Color(2, 48, 71));
        lblIDTurma.setText("IDTURMA");

        btDesescalar.setBackground(new java.awt.Color(142, 202, 230));
        btDesescalar.setForeground(new java.awt.Color(142, 202, 230));
        btDesescalar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/IconeTurma2.png"))); // NOI18N
        btDesescalar.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 5, true));
        btDesescalar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btDesescalarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btDesescalarMouseExited(evt);
            }
        });
        btDesescalar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btDesescalarActionPerformed(evt);
            }
        });

        jLabel3.setBackground(new java.awt.Color(2, 48, 71));
        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(2, 48, 71));
        jLabel3.setText("Desescalar Matéria");

        tblMateriaEscalada.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Id_Materia", "Materia", "Turma", "Horario", "Id_Turma", "Id_Horario"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblMateriaEscalada);
        if (tblMateriaEscalada.getColumnModel().getColumnCount() > 0) {
            tblMateriaEscalada.getColumnModel().getColumn(0).setMinWidth(0);
            tblMateriaEscalada.getColumnModel().getColumn(0).setPreferredWidth(0);
            tblMateriaEscalada.getColumnModel().getColumn(0).setMaxWidth(0);
            tblMateriaEscalada.getColumnModel().getColumn(4).setMinWidth(0);
            tblMateriaEscalada.getColumnModel().getColumn(4).setMaxWidth(0);
            tblMateriaEscalada.getColumnModel().getColumn(5).setMinWidth(0);
            tblMateriaEscalada.getColumnModel().getColumn(5).setMaxWidth(0);
        }

        lblNomeE1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblNomeE1.setForeground(new java.awt.Color(2, 48, 71));
        lblNomeE1.setText("Digite o nome da matéria:");

        btPesquisaMateria.setText("Pesquisar");
        btPesquisaMateria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btPesquisaMateriaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlPrincipalCLayout = new javax.swing.GroupLayout(pnlPrincipalC);
        pnlPrincipalC.setLayout(pnlPrincipalCLayout);
        pnlPrincipalCLayout.setHorizontalGroup(
            pnlPrincipalCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPrincipalCLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnVoltarCadA)
                .addGap(32, 32, 32)
                .addGroup(pnlPrincipalCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlPrincipalCLayout.createSequentialGroup()
                        .addComponent(lblNomeE1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtBuscarMateria, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btPesquisaMateria))
                    .addGroup(pnlPrincipalCLayout.createSequentialGroup()
                        .addGroup(pnlPrincipalCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(pnlPrincipalCLayout.createSequentialGroup()
                                .addGap(227, 227, 227)
                                .addComponent(lblIDTurma, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlPrincipalCLayout.createSequentialGroup()
                                .addGroup(pnlPrincipalCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(pnlPrincipalCLayout.createSequentialGroup()
                                        .addGap(6, 6, 6)
                                        .addComponent(btDesescalar, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(jLabel3))
                                .addGap(55, 55, 55)))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 530, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlPrincipalCLayout.setVerticalGroup(
            pnlPrincipalCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPrincipalCLayout.createSequentialGroup()
                .addGroup(pnlPrincipalCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlPrincipalCLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnVoltarCadA))
                    .addGroup(pnlPrincipalCLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(pnlPrincipalCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtBuscarMateria, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblNomeE1, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btPesquisaMateria))))
                .addGap(28, 28, 28)
                .addGroup(pnlPrincipalCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlPrincipalCLayout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btDesescalar, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(149, 149, 149)
                        .addComponent(lblIDTurma, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pnlBottomC.setBackground(new java.awt.Color(2, 48, 71));
        pnlBottomC.setPreferredSize(new java.awt.Dimension(499, 100));

        lblBottomC.setBackground(new java.awt.Color(251, 133, 0));
        lblBottomC.setFont(new java.awt.Font("Segoe UI", 1, 48)); // NOI18N
        lblBottomC.setForeground(new java.awt.Color(251, 133, 0));
        lblBottomC.setText("SYST");

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 44)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(142, 202, 230));
        jLabel1.setText("edu");

        javax.swing.GroupLayout pnlBottomCLayout = new javax.swing.GroupLayout(pnlBottomC);
        pnlBottomC.setLayout(pnlBottomCLayout);
        pnlBottomCLayout.setHorizontalGroup(
            pnlBottomCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlBottomCLayout.createSequentialGroup()
                .addGap(360, 360, 360)
                .addComponent(jLabel1)
                .addGap(0, 0, 0)
                .addComponent(lblBottomC)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlBottomCLayout.setVerticalGroup(
            pnlBottomCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlBottomCLayout.createSequentialGroup()
                .addContainerGap(19, Short.MAX_VALUE)
                .addGroup(pnlBottomCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblBottomC)
                    .addComponent(jLabel1))
                .addGap(16, 16, 16))
        );

        pnlTopoC.setBackground(new java.awt.Color(2, 48, 71));
        pnlTopoC.setMinimumSize(new java.awt.Dimension(800, 100));

        lblTopoC.setFont(new java.awt.Font("Segoe UI", 1, 48)); // NOI18N
        lblTopoC.setForeground(new java.awt.Color(251, 133, 0));
        lblTopoC.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTopoC.setText("Desescalar");
        lblTopoC.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout pnlTopoCLayout = new javax.swing.GroupLayout(pnlTopoC);
        pnlTopoC.setLayout(pnlTopoCLayout);
        pnlTopoCLayout.setHorizontalGroup(
            pnlTopoCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTopoCLayout.createSequentialGroup()
                .addGap(201, 201, 201)
                .addComponent(lblTopoC, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(221, Short.MAX_VALUE))
        );
        pnlTopoCLayout.setVerticalGroup(
            pnlTopoCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTopoCLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(lblTopoC, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(24, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlTopoC, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(pnlBottomC, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 922, Short.MAX_VALUE)
            .addComponent(pnlPrincipalC, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnlTopoC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(pnlPrincipalC, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0)
                .addComponent(pnlBottomC, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnVoltarCadAMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnVoltarCadAMouseEntered
        btnVoltarCadA.setBackground(new Color(251, 133, 0));
    }//GEN-LAST:event_btnVoltarCadAMouseEntered

    private void btnVoltarCadAMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnVoltarCadAMouseExited
        btnVoltarCadA.setBackground(new Color(142, 202, 230));
    }//GEN-LAST:event_btnVoltarCadAMouseExited

    private void btnVoltarCadAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarCadAActionPerformed
        try {
            TelaEscalarMate t = new TelaEscalarMate();
            t.setVisible(true);
            dispose();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(TelaDesescalarMateria.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(TelaDesescalarMateria.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnVoltarCadAActionPerformed

    private void btDesescalarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btDesescalarMouseEntered
        btDesescalar.setBackground(new Color(251, 133, 0));
    }//GEN-LAST:event_btDesescalarMouseEntered

    private void btDesescalarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btDesescalarMouseExited
        btDesescalar.setBackground(new Color(142, 202, 230));
    }//GEN-LAST:event_btDesescalarMouseExited

    private void btDesescalarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btDesescalarActionPerformed
        // Obtém a linha selecionada da tabela
        int selectedRow = tblMateriaEscalada.getSelectedRow();

        if (selectedRow != -1) {
            // Obtém os valores das células
            Object materiaIdObj = tblMateriaEscalada.getValueAt(selectedRow, 0); // Coluna 0: Materia_ID
            Object materiaNomeObj = tblMateriaEscalada.getValueAt(selectedRow, 1); // Coluna 1: Nome da matéria
            Object turmaNomeObj = tblMateriaEscalada.getValueAt(selectedRow, 2); // Coluna 2: Nome da turma
            Object horarioNomeObj = tblMateriaEscalada.getValueAt(selectedRow, 3); // Coluna 3: Horário
            Object turmaIdObj = tblMateriaEscalada.getValueAt(selectedRow, 4); // Coluna 4: ID_Turma
            Object horarioIdObj = tblMateriaEscalada.getValueAt(selectedRow, 5); // Coluna 5: ID_Horario

            // Definindo variáveis
            int materiaId = 0;
            int turmaId = 0;
            int horarioId = 0;

            try {
                // Verifica e converte os IDs para integer
                if (materiaIdObj instanceof Integer) {
                    materiaId = (int) materiaIdObj;
                }
                if (turmaIdObj instanceof Integer) {
                    turmaId = (int) turmaIdObj;
                }
                if (horarioIdObj instanceof Integer) {
                    horarioId = (int) horarioIdObj;
                }

                // Chama o método para remover a associação
                EscalarMateriaDAO dao = new EscalarMateriaDAO();
                dao.removerAssociacao(materiaId, turmaId, horarioId);

                // Atualiza a tabela após a remoção
                DefaultTableModel modeloTabela = (DefaultTableModel) tblMateriaEscalada.getModel();
                modeloTabela.setRowCount(0); // Limpa a tabela
                carregarHorariosMateriasTurmas();  // Recarrega os dados da tabela
                txtBuscarMateria.setText("");
            } catch (ClassNotFoundException | SQLException e) {
                JOptionPane.showMessageDialog(this, "Erro ao desescalar: " + e.getMessage());
            }
        } else {
            JOptionPane.showMessageDialog(this, "Selecione uma associação para desescalar.");
        }
    }//GEN-LAST:event_btDesescalarActionPerformed

    private void btPesquisaMateriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btPesquisaMateriaActionPerformed
        String nomeMateria = txtBuscarMateria.getText();  // Obtém o nome da matéria digitada

        // Se o campo de pesquisa estiver vazio, você pode exibir todos os resultados
        if (nomeMateria.trim().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Por favor, insira o nome da matéria para pesquisar.");
            return;
        }

        DefaultTableModel modeloTabela = (DefaultTableModel) tblMateriaEscalada.getModel();
        modeloTabela.setRowCount(0);  // Limpa a tabela antes de carregar os novos resultados

        // SQL para consultar os dados filtrados pelo nome da matéria
        String sql = "SELECT mt.Materia_ID AS Id_Materia, m.Nome AS Materia, t.Classe AS Turma, h.Inicio AS Horario, mt.Turma_ID AS Id_Turma, mt.Horario_ID AS Id_Horario "
                + "FROM Materias m "
                + "INNER JOIN Horarios_Materias mt ON m.Id_Materia = mt.Materia_ID "
                + "INNER JOIN Turmas t ON mt.Turma_ID = t.Id_Turma "
                + "INNER JOIN Horarios h ON mt.Horario_ID = h.Id_Horario "
                + "WHERE m.Nome LIKE ?";  // Aqui, estamos filtrando pelo nome da matéria

        try (Connection con = ConnectionFactory.getConnection(); PreparedStatement ps = con.prepareStatement(sql)) {

            // Substitui o ? por nomeMateria (usado para buscar pela matéria)
            ps.setString(1, "%" + nomeMateria + "%");

            ResultSet rs = ps.executeQuery();  // Executa a consulta SQL

            // Itera sobre o ResultSet e adiciona os resultados na tabela
            while (rs.next()) {
                modeloTabela.addRow(new Object[]{
                    rs.getInt("Id_Materia"), // ID da matéria
                    rs.getString("Materia"), // Nome da matéria
                    rs.getString("Turma"), // Número da classe da turma
                    rs.getString("Horario"), // Horário
                    rs.getInt("Id_Turma"), // ID da turma
                    rs.getInt("Id_Horario") // ID do horário
                });
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Erro ao carregar matérias, turmas e horários: " + ex.getMessage());
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(TelaDesescalarMateria.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btPesquisaMateriaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaDesescalarMateria.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaDesescalarMateria.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaDesescalarMateria.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);

        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaDesescalarMateria.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaDesescalarMateria().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btDesescalar;
    private javax.swing.JButton btPesquisaMateria;
    private javax.swing.JButton btnVoltarCadA;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblBottomC;
    private javax.swing.JLabel lblIDTurma;
    private javax.swing.JLabel lblNomeE1;
    private javax.swing.JLabel lblTopoC;
    private javax.swing.JPanel pnlBottomC;
    private javax.swing.JPanel pnlPrincipalC;
    private javax.swing.JPanel pnlTopoC;
    private javax.swing.JTable tblMateriaEscalada;
    private javax.swing.JTextField txtBuscarMateria;
    // End of variables declaration//GEN-END:variables
}
