/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package sisescola_java.paginasis.Turmas;

import java.awt.Color;
import static java.awt.event.KeyEvent.VK_ENTER;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.List;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import sisescola_java.Objetos1.*;
import sisescola_java.Objetos1.AlunoDAO;
import sisescola_java.Objetos1.Enturmar;
import sisescola_java.Objetos1.EnturmarDAO;
import sisescola_java.Objetos1.Turma;
import sisescola_java.Objetos1.TurmaDAO;
import sisescola_java.paginasis.Aluno.TelaAluno;
import sisescola_java.paginasis.Aluno.TelaConsAluno;

/**
 *
 * @author Matheus
 */
public class TelaDesenturmar extends javax.swing.JFrame {

    private void carregarTurmas(int alunoId) {
        DefaultTableModel modeloTabela = (DefaultTableModel) tblDesenturmar.getModel();
        modeloTabela.setRowCount(0); // Limpa a tabela antes de carregar novas turmas
        EnturmarDAO edao = new EnturmarDAO();
        try {
            List<Turma> turmas = edao.ConsultarTurmasAlunos(alunoId);
            for (Turma turma : turmas) {
                modeloTabela.addRow(new Object[]{
                    turma.getId_Turma(),
                    turma.getClasse()
                });
            }
        } catch (ClassNotFoundException | SQLException ex) {
            JOptionPane.showMessageDialog(this, "Erro ao carregar turmas: " + ex.getMessage());
        }
    }

    private void pesquisarAluno() {
        String pesquisa = txtPCPF.getText();
        EnturmarDAO edao = new EnturmarDAO();
        try {
            Aluno aluno = edao.buscarAlunoPorCPFOuNome(pesquisa);
            if (aluno != null) {
                lblIDAluno.setText("ID do Aluno: " + aluno.getId_Aluno());
                lblNomeAluno.setText("Nome do Aluno: " + aluno.getNomeA());
                carregarTurmas(aluno.getId_Aluno());
            } else {
                JOptionPane.showMessageDialog(this, "Aluno não encontrado.");
            }
        } catch (ClassNotFoundException | SQLException ex) {
            JOptionPane.showMessageDialog(this, "Erro na consulta: " + ex.getMessage());
        }
    }

    private void desenturmarDeUmaTurma() {
        int alunoId = Integer.parseInt(lblIDAluno.getText().replace("ID do Aluno: ", ""));
        int selectedRow = tblDesenturmar.getSelectedRow();
        if (selectedRow != -1) {
            int turmaId = (int) tblDesenturmar.getValueAt(selectedRow, 0);
            try {
                EnturmarDAO dao = new EnturmarDAO();
                dao.desenturmarDeTurma(alunoId, turmaId);
                carregarTurmas(alunoId); // Atualiza a tabela após a remoção
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Erro ao desenturmar da turma: " + e.getMessage());
            }
        } else {
            JOptionPane.showMessageDialog(this, "Selecione uma turma para desenturmar.");
        }
    }

    private void desenturmarDeTodasAsTurmas() {
        int alunoId = Integer.parseInt(lblIDAluno.getText().replace("ID do Aluno: ", ""));
        try {
            EnturmarDAO dao = new EnturmarDAO();
            dao.desenturmarAlunogeral(alunoId);
            carregarTurmas(alunoId); // Limpa a tabela após remoção de todas as turmas
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erro ao desenturmar de todas as turmas: " + e.getMessage());
        }
    }

    public void btconsulta(String pesquisa) {
        EnturmarDAO edao = new EnturmarDAO();
        try {
            Aluno aluno = edao.buscarAlunoPorCPFOuNome(pesquisa);
            if (aluno != null) {
                lblIDAluno.setText(String.valueOf(aluno.getId_Aluno()));
                lblNomeAluno.setText(aluno.getNomeA());
                carregarTurmas(aluno.getId_Aluno()); // Carrega as turmas após encontrar o aluno
            } else {
                JOptionPane.showMessageDialog(this, "Aluno não encontrado.");
            }
        } catch (ClassNotFoundException | SQLException ex) {
            JOptionPane.showMessageDialog(this, "Erro na consulta: " + ex.getMessage());
        }
    }

    /**
     * Creates new form TelaEnturmar
     */
    public TelaDesenturmar() {
        initComponents();
        setLocationRelativeTo(null);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlTopoC = new javax.swing.JPanel();
        lblTopoC = new javax.swing.JLabel();
        pnlBottomC = new javax.swing.JPanel();
        lblBottomC = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        pnlPrincipalC = new javax.swing.JPanel();
        btnVoltarCadA = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtPCPF = new javax.swing.JTextField();
        lblClasseTurma = new javax.swing.JLabel();
        lblNomeAluno = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        lblIDAluno = new javax.swing.JLabel();
        lblIDTurma = new javax.swing.JLabel();
        btPesquisaEnt = new javax.swing.JButton();
        btDesenturmar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDesenturmar = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocation(new java.awt.Point(0, 0));
        setResizable(false);

        pnlTopoC.setBackground(new java.awt.Color(2, 48, 71));
        pnlTopoC.setMinimumSize(new java.awt.Dimension(800, 100));

        lblTopoC.setFont(new java.awt.Font("Segoe UI", 1, 48)); // NOI18N
        lblTopoC.setForeground(new java.awt.Color(251, 133, 0));
        lblTopoC.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTopoC.setText("Desenturmar");
        lblTopoC.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout pnlTopoCLayout = new javax.swing.GroupLayout(pnlTopoC);
        pnlTopoC.setLayout(pnlTopoCLayout);
        pnlTopoCLayout.setHorizontalGroup(
            pnlTopoCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlTopoCLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblTopoC, javax.swing.GroupLayout.PREFERRED_SIZE, 638, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(134, 134, 134))
        );
        pnlTopoCLayout.setVerticalGroup(
            pnlTopoCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTopoCLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(lblTopoC, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        pnlBottomC.setBackground(new java.awt.Color(2, 48, 71));
        pnlBottomC.setPreferredSize(new java.awt.Dimension(499, 100));

        lblBottomC.setBackground(new java.awt.Color(251, 133, 0));
        lblBottomC.setFont(new java.awt.Font("Segoe UI", 1, 48)); // NOI18N
        lblBottomC.setForeground(new java.awt.Color(251, 133, 0));
        lblBottomC.setText("SYST");

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 44)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(142, 202, 230));
        jLabel1.setText("edu");

        javax.swing.GroupLayout pnlBottomCLayout = new javax.swing.GroupLayout(pnlBottomC);
        pnlBottomC.setLayout(pnlBottomCLayout);
        pnlBottomCLayout.setHorizontalGroup(
            pnlBottomCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlBottomCLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(0, 0, 0)
                .addComponent(lblBottomC)
                .addGap(347, 347, 347))
        );
        pnlBottomCLayout.setVerticalGroup(
            pnlBottomCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlBottomCLayout.createSequentialGroup()
                .addContainerGap(19, Short.MAX_VALUE)
                .addGroup(pnlBottomCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblBottomC)
                    .addComponent(jLabel1))
                .addGap(16, 16, 16))
        );

        pnlPrincipalC.setBackground(new java.awt.Color(142, 202, 230));

        btnVoltarCadA.setBackground(new java.awt.Color(142, 202, 230));
        btnVoltarCadA.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/Imagensbotãopequeno/voltar.png"))); // NOI18N
        btnVoltarCadA.setToolTipText("Voltar");
        btnVoltarCadA.setBorder(null);
        btnVoltarCadA.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnVoltarCadAMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnVoltarCadAMouseExited(evt);
            }
        });
        btnVoltarCadA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarCadAActionPerformed(evt);
            }
        });

        jLabel2.setBackground(new java.awt.Color(2, 48, 71));
        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(2, 48, 71));
        jLabel2.setText("Insira o CPF ou nome do aluno a ser desenturmado");

        txtPCPF.setToolTipText("Aperte enter após digitar o cpf");
        txtPCPF.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPCPFKeyPressed(evt);
            }
        });

        lblClasseTurma.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblClasseTurma.setForeground(new java.awt.Color(2, 48, 71));
        lblClasseTurma.setText("Classe do Aluno");

        lblNomeAluno.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblNomeAluno.setForeground(new java.awt.Color(2, 48, 71));
        lblNomeAluno.setText("Nome do aluno");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(2, 48, 71));
        jLabel4.setText("Desenturmar Aluno");

        lblIDAluno.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lblIDAluno.setForeground(new java.awt.Color(2, 48, 71));
        lblIDAluno.setText("ID do Aluno");

        lblIDTurma.setFont(new java.awt.Font("Segoe UI", 1, 2)); // NOI18N
        lblIDTurma.setForeground(new java.awt.Color(2, 48, 71));
        lblIDTurma.setText("IDTURMA");

        btPesquisaEnt.setText("Pesquisar");
        btPesquisaEnt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btPesquisaEntActionPerformed(evt);
            }
        });

        btDesenturmar.setBackground(new java.awt.Color(142, 202, 230));
        btDesenturmar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Imagens/Ícone Enturmar.png"))); // NOI18N
        btDesenturmar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(2, 48, 71), 5));
        btDesenturmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btDesenturmarActionPerformed(evt);
            }
        });

        tblDesenturmar.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "ID_Turma", "Classe"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(tblDesenturmar);

        javax.swing.GroupLayout pnlPrincipalCLayout = new javax.swing.GroupLayout(pnlPrincipalC);
        pnlPrincipalC.setLayout(pnlPrincipalCLayout);
        pnlPrincipalCLayout.setHorizontalGroup(
            pnlPrincipalCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPrincipalCLayout.createSequentialGroup()
                .addGap(86, 86, 86)
                .addGroup(pnlPrincipalCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblIDTurma, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblClasseTurma)
                    .addComponent(lblIDAluno))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlPrincipalCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(pnlPrincipalCLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btDesenturmar)
                        .addGap(14, 14, 14))
                    .addComponent(jLabel4))
                .addGap(22, 22, 22))
            .addGroup(pnlPrincipalCLayout.createSequentialGroup()
                .addGroup(pnlPrincipalCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlPrincipalCLayout.createSequentialGroup()
                        .addGap(86, 86, 86)
                        .addComponent(jLabel2))
                    .addGroup(pnlPrincipalCLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnVoltarCadA)
                        .addGap(30, 30, 30)
                        .addComponent(lblNomeAluno)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(txtPCPF, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btPesquisaEnt)
                .addContainerGap(16, Short.MAX_VALUE))
        );
        pnlPrincipalCLayout.setVerticalGroup(
            pnlPrincipalCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlPrincipalCLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(pnlPrincipalCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPCPF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btPesquisaEnt)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(28, 28, 28)
                .addGroup(pnlPrincipalCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblNomeAluno, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlPrincipalCLayout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pnlPrincipalCLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btDesenturmar)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(22, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlPrincipalCLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnVoltarCadA)
                .addGap(66, 66, 66)
                .addComponent(lblIDAluno, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(lblClasseTurma)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblIDTurma, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnlTopoC, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(pnlBottomC, javax.swing.GroupLayout.DEFAULT_SIZE, 932, Short.MAX_VALUE)
            .addComponent(pnlPrincipalC, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnlTopoC, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(pnlPrincipalC, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0)
                .addComponent(pnlBottomC, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnVoltarCadAMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnVoltarCadAMouseEntered
        btnVoltarCadA.setBackground(new Color(251, 133, 0));
    }//GEN-LAST:event_btnVoltarCadAMouseEntered

    private void btnVoltarCadAMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnVoltarCadAMouseExited
        btnVoltarCadA.setBackground(new Color(142, 202, 230));
    }//GEN-LAST:event_btnVoltarCadAMouseExited

    private void btnVoltarCadAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarCadAActionPerformed
        TelaEnturmar t = new TelaEnturmar();
        t.setVisible(true);
        dispose();
    }//GEN-LAST:event_btnVoltarCadAActionPerformed

    private void txtPCPFKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPCPFKeyPressed
        if (evt.getKeyCode() == VK_ENTER) {
            btconsulta(txtPCPF.getText());
        }
    }//GEN-LAST:event_txtPCPFKeyPressed

    private void btPesquisaEntActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btPesquisaEntActionPerformed
        String cpfOuNome = txtPCPF.getText();
        EnturmarDAO enturmarDAO = new EnturmarDAO();
        try {
            // Consultando o aluno e a turma ao qual ele pertence
            Aluno aluno = enturmarDAO.buscarAlunoPorCPFOuNome(cpfOuNome);
            if (aluno != null) {
                lblIDAluno.setText(String.valueOf(aluno.getId_Aluno()));
                lblNomeAluno.setText(aluno.getNomeA());
                carregarTurmas(aluno.getId_Aluno()); // Carrega as turmas associadas ao aluno
            } else {
                JOptionPane.showMessageDialog(null, "Aluno não encontrado.");
            }
        } catch (ClassNotFoundException | SQLException ex) {
            JOptionPane.showMessageDialog(this, "Erro na consulta: " + ex.getMessage());
        }
    }//GEN-LAST:event_btPesquisaEntActionPerformed

    private void btDesenturmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btDesenturmarActionPerformed
        try {
            String alunoIdStr = lblIDAluno.getText();

            // Verifica se um aluno foi selecionado
            if (alunoIdStr != null && !alunoIdStr.isEmpty()) {
                int alunoId = Integer.parseInt(alunoIdStr);
                int selectedRow = tblDesenturmar.getSelectedRow();

                // Verifica se uma turma foi selecionada na tabela
                if (selectedRow >= 0) {
                    int turmaId = (int) tblDesenturmar.getValueAt(selectedRow, 0); // Obtém o ID da turma da linha selecionada
                    EnturmarDAO edao = new EnturmarDAO();

                    // Desenturma o aluno da turma específica
                    edao.desenturmarDeTurma(alunoId, turmaId);

                    // Recarrega as turmas para refletir a remoção
                    carregarTurmas(alunoId);

                    // Verifica se o aluno ainda está associado a alguma turma
                    List<Turma> turmasRestantes = edao.ConsultarTurmasAlunos(alunoId);
                    if (turmasRestantes.isEmpty()) {
                        // Se não houver mais turmas associadas, redefine as labels
                        lblIDAluno.setText("ID do Aluno");
                        lblNomeAluno.setText("Nome do Aluno");
                        lblClasseTurma.setText("Classe da Turma");
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Nenhuma turma selecionada para desenturmar.");
                }
            } else {
                JOptionPane.showMessageDialog(this, "Nenhum aluno selecionado para desenturmar.");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erro ao desenturmar o aluno: " + e.getMessage());
        }
    }//GEN-LAST:event_btDesenturmarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaDesenturmar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaDesenturmar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaDesenturmar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaDesenturmar.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaDesenturmar().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btDesenturmar;
    private javax.swing.JButton btPesquisaEnt;
    private javax.swing.JButton btnVoltarCadA;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblBottomC;
    private javax.swing.JLabel lblClasseTurma;
    private javax.swing.JLabel lblIDAluno;
    private javax.swing.JLabel lblIDTurma;
    private javax.swing.JLabel lblNomeAluno;
    private javax.swing.JLabel lblTopoC;
    private javax.swing.JPanel pnlBottomC;
    private javax.swing.JPanel pnlPrincipalC;
    private javax.swing.JPanel pnlTopoC;
    private javax.swing.JTable tblDesenturmar;
    private javax.swing.JTextField txtPCPF;
    // End of variables declaration//GEN-END:variables
}
